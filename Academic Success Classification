{"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":73290,"databundleVersionId":8710574,"sourceType":"competition"},{"sourceId":183678015,"sourceType":"kernelVersion"},{"sourceId":183693494,"sourceType":"kernelVersion"},{"sourceId":183694073,"sourceType":"kernelVersion"},{"sourceId":183765064,"sourceType":"kernelVersion"},{"sourceId":183869594,"sourceType":"kernelVersion"}],"dockerImageVersionId":30716,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/darkdevil18/0-84042-ensemble-voting-no-feature-eng?scriptVersionId=184154108\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"<h1 style=\"font-family:verdana;\"> <center>üßë‚Äçüéì Student üìö Academic Success üèÜüéØüíé Prediction üîÆ</center> </h1>\n\n<center><img src=\"https://i.giphy.com/media/v1.Y2lkPTc5MGI3NjExdHV3djduNTMwYWF6ajMxa3d5YnIybmNncHFxc2hkcndqbmhmZjFnMCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/aoGeZmWNhPkTYHXW5R/giphy.gif\"></center>\n\n\n<p><center style=\"color:#159364; font-family:cursive; font-size:20px; font-weight:600\">Thanks for visiting my notebook. If you enjoy The Notebook, I kindly request that you consider upvoting to provide me with further motivation to create additional works of similar nature in the future. </center></p>\n\n# üßê Overview\n<div class=\"alert alert-block alert-info\">\n<p style=\"font-size: 20px; font-family: verdana; line-height: 1.7\">The academic achievement of students is influenced by several elements, such as the choice of academic stream, socio-economic circumstances, and demographic characteristics. Their graduation or dropout from their undergraduate degree hinges on their academic success and financial situation, as well as the support they receive from their parents' educational background and career.<p>\n    \n<p style=\"font-size: 20px; font-family: verdana; line-height: 1.7\">Here is a brief overview of the features that we are going to encounter and train our models on:</p>\n<ul style=\"font-size: 20px; font-family: verdana; line-height: 1.7\">\n    <li><strong>Perosonal Information:</strong> Marital status, gender, age at enrollment, nationality, international status, displaces status</li>\n    <li><strong>Family Background:</strong> Mother's and father's qualification and occupation</li>\n    <li><strong>Application and Admission:</strong> Application mode, application order, course, admission grade</li>\n    <li><strong>Academic Background:</strong> Previous qualification, previous qualification grade</li>\n    <li><strong>Academic Performance:</strong> Curricular units in the 1st and 2nd semesters(credited, enrolled, evaluations, approved, grades, without evaluations)</li>\n    <li><strong>Attendance and Financial Status:</strong> Daytime/evening attendance, educational special needs, debtor status, tuition fees up to data, scholarship holder</li>\n    <li><strong>Economic Indicators:</strong> Unemployment rate, inflation rate, GDP</li>\n</ul>\n    \n</div>\n\n# üéØ Our Goal\n<div class=\"alert alert-block alert-info\" style=\"font-size: 20px; font-family: verdana; line-height: 1.7\">\n    Our goal is to understand the data and use this to train machine learning models to predict the academinc success of students.\n</div>","metadata":{}},{"cell_type":"markdown","source":"# üõ†Ô∏è Import Libraries","metadata":{}},{"cell_type":"code","source":"!pip install opentsne","metadata":{"_kg_hide-output":true,"_kg_hide-input":true,"execution":{"iopub.status.busy":"2024-06-18T08:37:49.83721Z","iopub.execute_input":"2024-06-18T08:37:49.837503Z","iopub.status.idle":"2024-06-18T08:38:04.012258Z","shell.execute_reply.started":"2024-06-18T08:37:49.837477Z","shell.execute_reply":"2024-06-18T08:38:04.011355Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport warnings\nfrom sklearn.preprocessing import LabelEncoder, StandardScaler\nfrom sklearn.pipeline import make_pipeline\nfrom sklearn.decomposition import PCA\nfrom sklearn.feature_selection import mutual_info_classif\nfrom sklearn.model_selection import cross_val_score, StratifiedKFold, train_test_split\nfrom sklearn.metrics import f1_score, accuracy_score, classification_report, confusion_matrix, ConfusionMatrixDisplay\nimport openTSNE\nfrom umap import UMAP\nfrom sklearn.ensemble import HistGradientBoostingClassifier, VotingClassifier\nfrom xgboost import XGBClassifier\nfrom catboost import CatBoostClassifier\nfrom lightgbm import LGBMClassifier\n\nwarnings.filterwarnings(\"ignore\")","metadata":{"execution":{"iopub.status.busy":"2024-06-18T08:38:04.014181Z","iopub.execute_input":"2024-06-18T08:38:04.014497Z","iopub.status.idle":"2024-06-18T08:38:33.174337Z","shell.execute_reply.started":"2024-06-18T08:38:04.01447Z","shell.execute_reply":"2024-06-18T08:38:33.173574Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# üíæ Import Data","metadata":{}},{"cell_type":"code","source":"train = pd.read_csv(\"/kaggle/input/playground-series-s4e6/train.csv\", index_col=\"id\")\ntest = pd.read_csv(\"/kaggle/input/playground-series-s4e6/test.csv\", index_col=\"id\")","metadata":{"execution":{"iopub.status.busy":"2024-06-18T08:38:33.175347Z","iopub.execute_input":"2024-06-18T08:38:33.17602Z","iopub.status.idle":"2024-06-18T08:38:33.744269Z","shell.execute_reply.started":"2024-06-18T08:38:33.175993Z","shell.execute_reply":"2024-06-18T08:38:33.743521Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"target = \"Target\"","metadata":{"execution":{"iopub.status.busy":"2024-06-18T08:38:33.747129Z","iopub.execute_input":"2024-06-18T08:38:33.748075Z","iopub.status.idle":"2024-06-18T08:38:33.75328Z","shell.execute_reply.started":"2024-06-18T08:38:33.748038Z","shell.execute_reply":"2024-06-18T08:38:33.752419Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"features = test.columns.to_list()","metadata":{"execution":{"iopub.status.busy":"2024-06-18T08:38:33.754361Z","iopub.execute_input":"2024-06-18T08:38:33.7547Z","iopub.status.idle":"2024-06-18T08:38:33.760695Z","shell.execute_reply.started":"2024-06-18T08:38:33.75467Z","shell.execute_reply":"2024-06-18T08:38:33.759862Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"categorical_features = train.select_dtypes(include=int).columns.to_list()\ncontinuous_features = train.select_dtypes(include=float).columns.to_list()","metadata":{"execution":{"iopub.status.busy":"2024-06-18T08:38:33.761694Z","iopub.execute_input":"2024-06-18T08:38:33.76197Z","iopub.status.idle":"2024-06-18T08:38:33.777048Z","shell.execute_reply.started":"2024-06-18T08:38:33.761948Z","shell.execute_reply":"2024-06-18T08:38:33.776407Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"continuous_features","metadata":{"execution":{"iopub.status.busy":"2024-06-18T08:38:33.778013Z","iopub.execute_input":"2024-06-18T08:38:33.778326Z","iopub.status.idle":"2024-06-18T08:38:33.784959Z","shell.execute_reply.started":"2024-06-18T08:38:33.778295Z","shell.execute_reply":"2024-06-18T08:38:33.784003Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"discrete_features = [col for col in categorical_features if col.startswith(\"Curricular\")] + [\"Age at enrollment\"]\ndiscrete_features","metadata":{"execution":{"iopub.status.busy":"2024-06-18T08:38:33.786163Z","iopub.execute_input":"2024-06-18T08:38:33.786476Z","iopub.status.idle":"2024-06-18T08:38:33.792942Z","shell.execute_reply.started":"2024-06-18T08:38:33.786453Z","shell.execute_reply":"2024-06-18T08:38:33.792031Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"categorical_features = list(np.setdiff1d(categorical_features, discrete_features))\ncategorical_features","metadata":{"execution":{"iopub.status.busy":"2024-06-18T08:38:33.794092Z","iopub.execute_input":"2024-06-18T08:38:33.794382Z","iopub.status.idle":"2024-06-18T08:38:33.800935Z","shell.execute_reply.started":"2024-06-18T08:38:33.794344Z","shell.execute_reply":"2024-06-18T08:38:33.800024Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"train.shape","metadata":{"execution":{"iopub.status.busy":"2024-06-11T10:36:19.106253Z","iopub.execute_input":"2024-06-11T10:36:19.106916Z","iopub.status.idle":"2024-06-11T10:36:19.113442Z","shell.execute_reply.started":"2024-06-11T10:36:19.106887Z","shell.execute_reply":"2024-06-11T10:36:19.112608Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"test.shape","metadata":{"execution":{"iopub.status.busy":"2024-06-11T10:36:19.114625Z","iopub.execute_input":"2024-06-11T10:36:19.114905Z","iopub.status.idle":"2024-06-11T10:36:19.122205Z","shell.execute_reply.started":"2024-06-11T10:36:19.114877Z","shell.execute_reply":"2024-06-11T10:36:19.121224Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# üìä EDA üìà","metadata":{}},{"cell_type":"markdown","source":"## üî¢ Statistical Summary","metadata":{}},{"cell_type":"code","source":"def customDescription(df: pd.DataFrame, numeric_only: bool = True):\n    if numeric_only:\n        df = df.select_dtypes(include=np.number)\n    desc = pd.DataFrame(index=df.columns.to_list())\n    desc['type'] = df.dtypes\n    desc['count'] = df.count()\n    desc['nunique'] = df.nunique()\n    desc['%unique'] = desc['nunique'] / len(df) * 100\n    desc['null'] = df.isnull().sum()\n    desc['%null'] = desc['null'] / len(df) * 100\n    desc = pd.concat([desc, df.describe().T.drop('count', axis=1)], axis=1)\n\n    if numeric_only:\n        desc[\"skew\"] = df.skew()\n        desc[\"kurtosis\"] = df.kurtosis()\n    desc = desc.round(2)\n    return desc","metadata":{"execution":{"iopub.status.busy":"2024-06-11T10:36:19.123289Z","iopub.execute_input":"2024-06-11T10:36:19.123552Z","iopub.status.idle":"2024-06-11T10:36:19.130951Z","shell.execute_reply.started":"2024-06-11T10:36:19.12353Z","shell.execute_reply":"2024-06-11T10:36:19.130162Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"### Summary of training data","metadata":{}},{"cell_type":"code","source":"customDescription(train)","metadata":{"execution":{"iopub.status.busy":"2024-06-11T10:36:19.13191Z","iopub.execute_input":"2024-06-11T10:36:19.132172Z","iopub.status.idle":"2024-06-11T10:36:19.383842Z","shell.execute_reply.started":"2024-06-11T10:36:19.13215Z","shell.execute_reply":"2024-06-11T10:36:19.382913Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"### Summary of test data","metadata":{}},{"cell_type":"code","source":"customDescription(test)","metadata":{"execution":{"iopub.status.busy":"2024-06-11T10:36:19.3888Z","iopub.execute_input":"2024-06-11T10:36:19.389156Z","iopub.status.idle":"2024-06-11T10:36:19.591436Z","shell.execute_reply.started":"2024-06-11T10:36:19.389131Z","shell.execute_reply":"2024-06-11T10:36:19.590506Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"### Duplicate Check","metadata":{}},{"cell_type":"code","source":"train.duplicated().sum()","metadata":{"execution":{"iopub.status.busy":"2024-06-11T10:36:19.592548Z","iopub.execute_input":"2024-06-11T10:36:19.592871Z","iopub.status.idle":"2024-06-11T10:36:19.644302Z","shell.execute_reply.started":"2024-06-11T10:36:19.592845Z","shell.execute_reply":"2024-06-11T10:36:19.643457Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# üöö Feature Distribution","metadata":{}},{"cell_type":"markdown","source":"## Categorical Features","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(16, 20))\nfor i, col in enumerate(categorical_features):\n    plt.subplot(5, 4, i+1)\n    sns.countplot(data=train, x=col, hue=target)\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-11T10:36:19.645418Z","iopub.execute_input":"2024-06-11T10:36:19.646026Z","iopub.status.idle":"2024-06-11T10:36:27.752219Z","shell.execute_reply.started":"2024-06-11T10:36:19.645995Z","shell.execute_reply":"2024-06-11T10:36:27.751249Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(16, 20))\nfor i, col in enumerate(categorical_features):\n    plt.subplot(5, 4, i+1)\n    sns.boxplot(data=train, x=col, y=target)\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-11T10:36:27.75346Z","iopub.execute_input":"2024-06-11T10:36:27.753778Z","iopub.status.idle":"2024-06-11T10:36:31.838565Z","shell.execute_reply.started":"2024-06-11T10:36:27.753752Z","shell.execute_reply":"2024-06-11T10:36:31.837706Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(16, 20))\nfor i, col in enumerate(categorical_features):\n    plt.subplot(5, 4, i+1)\n    sns.violinplot(data=train, x=target, y=col)\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-11T10:36:31.839837Z","iopub.execute_input":"2024-06-11T10:36:31.840124Z","iopub.status.idle":"2024-06-11T10:36:42.098686Z","shell.execute_reply.started":"2024-06-11T10:36:31.840099Z","shell.execute_reply":"2024-06-11T10:36:42.09775Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## Discrete Nemeric Features","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(16, 12))\nfor i, col in enumerate(discrete_features):\n    plt.subplot(3, 4, i+1)\n    sns.countplot(data=train, x=col, hue=target)\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-11T10:36:42.100001Z","iopub.execute_input":"2024-06-11T10:36:42.100398Z","iopub.status.idle":"2024-06-11T10:36:48.691844Z","shell.execute_reply.started":"2024-06-11T10:36:42.100369Z","shell.execute_reply":"2024-06-11T10:36:48.690928Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(16, 12))\nfor i, col in enumerate(discrete_features):\n    plt.subplot(3, 4, i+1)\n    sns.boxplot(data=train, x=col, y=target)\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-11T10:36:48.693003Z","iopub.execute_input":"2024-06-11T10:36:48.693286Z","iopub.status.idle":"2024-06-11T10:36:51.005456Z","shell.execute_reply.started":"2024-06-11T10:36:48.69326Z","shell.execute_reply":"2024-06-11T10:36:51.004482Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(16, 12))\nfor i, col in enumerate(discrete_features):\n    plt.subplot(3, 4, i+1)\n    sns.violinplot(data=train, x=target, y=col)\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-11T10:36:51.006716Z","iopub.execute_input":"2024-06-11T10:36:51.007057Z","iopub.status.idle":"2024-06-11T10:36:57.947481Z","shell.execute_reply.started":"2024-06-11T10:36:51.007029Z","shell.execute_reply":"2024-06-11T10:36:57.946612Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## Continuous Numerical Features","metadata":{}},{"cell_type":"code","source":"plt.figure(figsize=(16, 8))\nfor i, col in enumerate(continuous_features):\n    plt.subplot(2, 4, i+1)\n    sns.histplot(data=train, x=col, hue=target)\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-11T10:36:57.948764Z","iopub.execute_input":"2024-06-11T10:36:57.949124Z","iopub.status.idle":"2024-06-11T10:37:05.587317Z","shell.execute_reply.started":"2024-06-11T10:36:57.949093Z","shell.execute_reply":"2024-06-11T10:37:05.586432Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(16, 8))\nfor i, col in enumerate(continuous_features):\n    plt.subplot(2, 4, i+1)\n    sns.boxplot(data=train, x=col, y=target)\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-11T10:37:05.588637Z","iopub.execute_input":"2024-06-11T10:37:05.589Z","iopub.status.idle":"2024-06-11T10:37:07.117495Z","shell.execute_reply.started":"2024-06-11T10:37:05.588969Z","shell.execute_reply":"2024-06-11T10:37:07.116554Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(16, 8))\nfor i, col in enumerate(continuous_features):\n    plt.subplot(2, 4, i+1)\n    sns.violinplot(data=train, x=target, y=col)\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-11T10:37:07.11874Z","iopub.execute_input":"2024-06-11T10:37:07.119693Z","iopub.status.idle":"2024-06-11T10:37:11.383513Z","shell.execute_reply.started":"2024-06-11T10:37:07.119657Z","shell.execute_reply":"2024-06-11T10:37:11.382624Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# üéØ Target Distribution","metadata":{}},{"cell_type":"code","source":"sns.countplot(data=train, x=target)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-11T10:37:11.384705Z","iopub.execute_input":"2024-06-11T10:37:11.384985Z","iopub.status.idle":"2024-06-11T10:37:11.656976Z","shell.execute_reply.started":"2024-06-11T10:37:11.384961Z","shell.execute_reply":"2024-06-11T10:37:11.656069Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# Encoding Categorical Variables","metadata":{}},{"cell_type":"markdown","source":"<div class=\"alert alert-block alert-success\" style=\"padding: 20px;\">\n    <p style=\"font-size:20px; font-family:verdana; line-height:1.7\">\n        üí° We first need to encode our target variable, which is a multiclass object-type variable.\n        Additionally, some of the feature variables are as follows:\n    </p>\n    <ul style=\"font-size:20px; font-family:verdana; line-height:1.7\">\n       <li>Application mode</li>\n       <li>Course</li>\n       <li>Previous qualification</li>\n       <li>Nacionality</li>\n       <li>Mother's qualification</li>\n       <li>Father's qualification</li>\n       <li>Mother's occupation</li>\n       <li>Father's occupation</li>\n    </ul>\n    <p style=\"font-size:20px; font-family:verdana; line-height:1.7\">\n        These are required to be encoded. Though they are in integer format, the values are not on specific scales.\n    </p>\n</div>","metadata":{}},{"cell_type":"code","source":"lab_enc = LabelEncoder()\ntrain[target] = lab_enc.fit_transform(train[target])","metadata":{"execution":{"iopub.status.busy":"2024-06-18T08:39:08.677471Z","iopub.execute_input":"2024-06-18T08:39:08.678178Z","iopub.status.idle":"2024-06-18T08:39:08.702242Z","shell.execute_reply.started":"2024-06-18T08:39:08.678148Z","shell.execute_reply":"2024-06-18T08:39:08.701429Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"sp_cols = [\n    \"Application mode\",\n    \"Course\",\n    \"Previous qualification\",\n    \"Nacionality\",\n    \"Mother's qualification\",\n    \"Father's qualification\",\n    \"Mother's occupation\",\n    \"Father's occupation\"\n]\n\n\ndef nunique(x):\n    return len(np.unique(x))\n\n\nunique_count = {}\nunique_count[\"columns\"] = sp_cols\nunique_count[\"in_training\"] = [nunique(train[col]) for col in sp_cols]\nunique_count[\"training + test\"] = [nunique(np.concatenate([train[col], test[col]])) for col in sp_cols]\n\npd.DataFrame(unique_count)","metadata":{"execution":{"iopub.status.busy":"2024-06-18T08:39:11.022691Z","iopub.execute_input":"2024-06-18T08:39:11.023074Z","iopub.status.idle":"2024-06-18T08:39:11.083016Z","shell.execute_reply.started":"2024-06-18T08:39:11.023043Z","shell.execute_reply":"2024-06-18T08:39:11.081936Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"<div class=\"alert alert-block alert-warning\" style=\"font-size:20px; font-family:verdana; line-height:1.7\">\nüö® When we merge the training and test datasets, we get additional classes, as seen in the output. Thus, if we train our model solely on the categories contained in the training dataset, we will be unable to accurately classify the student's academic accomplishment. As a result, in order to encode these variables, we must also use the training dataset.\n</div>","metadata":{}},{"cell_type":"code","source":"lab_encoder = LabelEncoder()\nfor col in sp_cols:\n    lab_encoder.fit(np.unique(np.concatenate([train[col], test[col]])))\n    train[col] = lab_encoder.transform(train[col])\n    test[col] = lab_encoder.transform(test[col])","metadata":{"execution":{"iopub.status.busy":"2024-06-18T08:39:14.84247Z","iopub.execute_input":"2024-06-18T08:39:14.843173Z","iopub.status.idle":"2024-06-18T08:39:14.928802Z","shell.execute_reply.started":"2024-06-18T08:39:14.843146Z","shell.execute_reply":"2024-06-18T08:39:14.927435Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# ü§ù Correlation","metadata":{}},{"cell_type":"code","source":"cor_mat = train.corr(method=\"pearson\")\n\nmask = np.triu(np.ones_like(cor_mat))\n\nplt.figure(figsize=(25, 20))\nsns.heatmap(cor_mat, annot=True, fmt=\".2f\", cmap=\"coolwarm\", mask=mask)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-11T01:09:44.978485Z","iopub.execute_input":"2024-06-11T01:09:44.978904Z","iopub.status.idle":"2024-06-11T01:09:48.141245Z","shell.execute_reply.started":"2024-06-11T01:09:44.978869Z","shell.execute_reply":"2024-06-11T01:09:48.140355Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"X = train.drop(target, axis=1)\ny = train[target]","metadata":{"execution":{"iopub.status.busy":"2024-06-18T08:40:13.477875Z","iopub.execute_input":"2024-06-18T08:40:13.47879Z","iopub.status.idle":"2024-06-18T08:40:13.491799Z","shell.execute_reply.started":"2024-06-18T08:40:13.478748Z","shell.execute_reply":"2024-06-18T08:40:13.490961Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# Dimensionality Reduction","metadata":{}},{"cell_type":"markdown","source":"## PCA\n\n<div class=\"alert alert-block alert-info\" style=\"font-size: 20px; font-family: verdana; line-height: 1.7\">\n   ‚ÑπÔ∏è Principal Component Analysis or PCA is a linear dimensionality reduction algorithm. In this technique, data is linearly transformed onto a new coordinate system such that the directions (principal components) capturing the largest variation in the data can be easily identified.\n</div>","metadata":{}},{"cell_type":"code","source":"pca = PCA()\n\npca_pipe = make_pipeline(StandardScaler(), pca)\n\npca_pipe.fit(X)\nexplained_variance_ratio = np.cumsum(pca_pipe[-1].explained_variance_ratio_)\n\nplt.figure(figsize=(10, 6))\nplt.plot(range(1, len(X.columns)+1), explained_variance_ratio, \"b-\")\nplt.scatter(range(1, len(X.columns)+1), explained_variance_ratio, c=\"red\")\nplt.xlabel(\"#Components\")\nplt.ylabel(\"Explained Variance Ratio\")\nplt.show()","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"<div class=\"alert alert-block alert-warning\" style=\"font-size:20px; font-family:verdana; line-height:1.7\">\n<strong>We can preserve 99% of variance with 31 components if we use PCA.</strong>\n</div>","metadata":{}},{"cell_type":"markdown","source":"## t-SNE\n\n<div class=\"alert alert-block alert-info\" style=\"font-size: 20px; font-family: verdana; line-height: 1.7;\">\n    <strong>t-distributed stochastic neighbor embedding (t-SNE)</strong> is a statistical method for visualizing high-dimensional data by giving each datapoint a location in a two or three-dimensional map. It is a nonlinear dimensionality reduction technique for embedding high-dimensional data for visualization in a low-dimensional space of two or three dimensions. Specifically, it models each high-dimensional object by a two- or three-dimensional point in such a way that similar objects are modeled by nearby points and dissimilar objects are modeled by distant points with high probability.\n</div>","metadata":{}},{"cell_type":"code","source":"def plot(x, **kwargs):\n    plt.scatter(x[:, 0], x[:, 1], c=y, s=3, **kwargs)","metadata":{"execution":{"iopub.status.busy":"2024-06-04T09:25:32.124812Z","iopub.execute_input":"2024-06-04T09:25:32.125536Z","iopub.status.idle":"2024-06-04T09:25:32.130008Z","shell.execute_reply.started":"2024-06-04T09:25:32.125496Z","shell.execute_reply":"2024-06-04T09:25:32.129004Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"%%time\n\nembedding_standard = openTSNE.TSNE(\n    perplexity=30,\n    initialization=\"random\",\n    metric=\"euclidean\",\n    n_jobs=8,\n    random_state=42,\n).fit(np.array(X))","metadata":{"execution":{"iopub.status.busy":"2024-06-04T09:25:46.444062Z","iopub.execute_input":"2024-06-04T09:25:46.444836Z","iopub.status.idle":"2024-06-04T09:28:55.876107Z","shell.execute_reply.started":"2024-06-04T09:25:46.4448Z","shell.execute_reply":"2024-06-04T09:28:55.875065Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(6, 6))\nplot(embedding_standard)\nplt.title(\"Standard t-SNE\")","metadata":{},"outputs":[],"execution_count":null},{"cell_type":"code","source":"%%time\nembedding_pca = openTSNE.TSNE(\n    perplexity=30,\n    initialization=\"pca\",\n    metric=\"euclidean\",\n    n_jobs=8,\n    random_state=42,\n).fit(np.array(X))","metadata":{"execution":{"iopub.status.busy":"2024-06-04T09:28:55.878477Z","iopub.execute_input":"2024-06-04T09:28:55.878894Z","iopub.status.idle":"2024-06-04T09:32:11.963568Z","shell.execute_reply.started":"2024-06-04T09:28:55.878857Z","shell.execute_reply":"2024-06-04T09:32:11.962416Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(6, 6))\nplot(embedding_pca)\nplt.title(\"PCA initialization\")","metadata":{},"outputs":[],"execution_count":null},{"cell_type":"code","source":"%%time\nembedding_cosine = openTSNE.TSNE(\n    perplexity=30,\n    initialization=\"random\",\n    metric=\"cosine\",\n    n_jobs=8,\n    random_state=3,\n).fit(np.array(X))","metadata":{"execution":{"iopub.status.busy":"2024-06-04T09:32:11.965041Z","iopub.execute_input":"2024-06-04T09:32:11.965445Z","iopub.status.idle":"2024-06-04T09:35:24.335488Z","shell.execute_reply.started":"2024-06-04T09:32:11.965412Z","shell.execute_reply":"2024-06-04T09:35:24.334513Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(6, 6))\nplot(embedding_cosine)\nplt.title(\"Cosine distance\")","metadata":{},"outputs":[],"execution_count":null},{"cell_type":"code","source":"%%time\nembedding_pca_cosine = openTSNE.TSNE(\n    perplexity=30,\n    initialization=\"pca\",\n    metric=\"cosine\",\n    n_jobs=8,\n    random_state=3,\n).fit(np.array(X))","metadata":{"execution":{"iopub.status.busy":"2024-06-04T09:35:24.337895Z","iopub.execute_input":"2024-06-04T09:35:24.338621Z","iopub.status.idle":"2024-06-04T09:38:38.867498Z","shell.execute_reply.started":"2024-06-04T09:35:24.338582Z","shell.execute_reply":"2024-06-04T09:38:38.866528Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(12, 12))\n\nplt.subplot(2, 2, 1)\nplot(embedding_standard)\nplt.title(\"Standard t-SNE\")\n\nplt.subplot(2, 2, 2)\nplot(embedding_pca)\nplt.title(\"PCA initialization\")\n\nplt.subplot(2, 2, 3)\nplot(embedding_cosine)\nplt.title(\"Cosine distance\")\n\nplt.subplot(2, 2, 4)\nplot(embedding_pca_cosine)\nplt.title(\"PCA initialization + Cosine distance\")\n\nplt.tight_layout()\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-04T09:38:38.868895Z","iopub.execute_input":"2024-06-04T09:38:38.869287Z","iopub.status.idle":"2024-06-04T09:38:43.67087Z","shell.execute_reply.started":"2024-06-04T09:38:38.869256Z","shell.execute_reply":"2024-06-04T09:38:43.66958Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## UMAP\n\n<div class=\"alert alert-block alert-info\" style=\"padding: 20px\">\n<p style=\"font-size:20px; font-family:verdana; line-height:1.7\">Uniform Manifold Approximation and Projection (UMAP) is a dimensionality reduction technique that can be used for visualisation similarly to t-SNE, but also for general non-linear dimension reduction.</p>\n    \n<p style=\"font-size:20px; font-family:verdana; line-height:1.7\">The algorithm is founded on three assumptions about the data</p>\n<ol style=\"font-size:20px; font-family:verdana; line-height:1.7\">\n    <li>The data is uniformly distributed on Riemannian manifold;</li>\n    <li>The Riemannian metric is locally constant (or can be approximated as such);</li>\n    <li>The manifold is locally connected.</li>\n</ol>\n<p style=\"font-size:20px; font-family:verdana; line-height:1.7\">From these assumptions it is possible to model the manifold with a fuzzy topological structure. The embedding is found by searching for a low dimensional projection of the data that has the closest possible equivalent fuzzy topological structure.</p>\n</div>","metadata":{}},{"cell_type":"code","source":"train_sample = train.sample(5000)\n\nreducer = UMAP()\n\nres = reducer.fit_transform(train_sample.drop(target, axis=1))","metadata":{"execution":{"iopub.status.busy":"2024-06-04T09:38:52.644751Z","iopub.execute_input":"2024-06-04T09:38:52.645661Z","iopub.status.idle":"2024-06-04T09:39:20.026107Z","shell.execute_reply.started":"2024-06-04T09:38:52.645619Z","shell.execute_reply":"2024-06-04T09:39:20.025285Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(8, 8))\nplt.scatter(res[:, 0], res[:, 1], c=train_sample[target], s=5)\nplt.title(\"UMAP\")\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-04T09:39:20.027634Z","iopub.execute_input":"2024-06-04T09:39:20.027925Z","iopub.status.idle":"2024-06-04T09:39:20.357683Z","shell.execute_reply.started":"2024-06-04T09:39:20.027901Z","shell.execute_reply":"2024-06-04T09:39:20.356691Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"<div class=\"alert alert-block alert-info\" style=\"font-size:20px; font-family:verdana; line-height:1.7\">\n    We can observe some clusters in both t-SNE and UMAP reduction methods. This implies that we can employ them for dimensionality reduction.\n</div>","metadata":{}},{"cell_type":"markdown","source":"# Feature Selection","metadata":{}},{"cell_type":"markdown","source":"## Mutual Information Score\n\n<div class=\"alert alert-block alert-info\" style=\"padding: 20px\">\n    <p style=\"font-size:20px; font-family:verdana; line-height:1.7\">\n        <strong>Mutual Information Score</strong> helps us to understand how much the feature variables tell us about the target variable.\n    </p>\n    <p style=\"font-size:20px; font-family:verdana; line-height:1.7\">\n        Since our data have a lot of feature variables, we can take help of this to remove redundant feature variables. This may improve the proformance of our model.\n    </p>\n</div>","metadata":{}},{"cell_type":"code","source":"discrete_features = X.dtypes == int\n\n\ndef mi_score_maker(X, y, discrete_features):\n    scores = mutual_info_classif(X, y, discrete_features=discrete_features)\n    df = pd.DataFrame({\n        'Features': X.columns,\n        'Scores': scores\n    })\n    df = df.sort_values(['Scores'], ascending=False).reset_index(drop=True)\n    return df","metadata":{"execution":{"iopub.status.busy":"2024-06-04T09:51:07.264698Z","iopub.execute_input":"2024-06-04T09:51:07.265724Z","iopub.status.idle":"2024-06-04T09:51:07.271931Z","shell.execute_reply.started":"2024-06-04T09:51:07.26569Z","shell.execute_reply":"2024-06-04T09:51:07.271018Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"mi_scores = mi_score_maker(X, y, discrete_features)\n\nmi_scores","metadata":{"execution":{"iopub.status.busy":"2024-06-04T09:51:09.009303Z","iopub.execute_input":"2024-06-04T09:51:09.010129Z","iopub.status.idle":"2024-06-04T09:51:11.939481Z","shell.execute_reply.started":"2024-06-04T09:51:09.0101Z","shell.execute_reply":"2024-06-04T09:51:11.938475Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"plt.figure(figsize=(16, 10))\nsns.barplot(x=\"Scores\", y=\"Features\", data=mi_scores)\nplt.title(\"Mutual Information Score\", size=20)\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-04T09:51:15.489319Z","iopub.execute_input":"2024-06-04T09:51:15.489709Z","iopub.status.idle":"2024-06-04T09:51:16.226279Z","shell.execute_reply.started":"2024-06-04T09:51:15.489671Z","shell.execute_reply":"2024-06-04T09:51:16.22535Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# ü§ñ Model Training","metadata":{}},{"cell_type":"code","source":"skfold = StratifiedKFold(n_splits=10, shuffle=True, random_state=42)\n\ndef model_scorer(model, X, y):\n    scores = cross_val_score(model, X, y, cv=skfold, scoring=\"accuracy\")\n    return scores.mean()","metadata":{"execution":{"iopub.status.busy":"2024-06-18T08:39:55.762318Z","iopub.execute_input":"2024-06-18T08:39:55.763224Z","iopub.status.idle":"2024-06-18T08:39:55.768123Z","shell.execute_reply.started":"2024-06-18T08:39:55.763189Z","shell.execute_reply":"2024-06-18T08:39:55.767133Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"## Baseline Models","metadata":{}},{"cell_type":"markdown","source":"### Catboost","metadata":{}},{"cell_type":"code","source":"%%time\n\ncat_clf = CatBoostClassifier(allow_writing_files=False, verbose=False, task_type=\"GPU\", random_state=42)\ncat_pipe = make_pipeline(StandardScaler(), cat_clf)\n\nmodel_scorer(cat_pipe, X, y)","metadata":{"execution":{"iopub.status.busy":"2024-06-18T08:40:42.627577Z","iopub.execute_input":"2024-06-18T08:40:42.62835Z","iopub.status.idle":"2024-06-18T08:42:45.485312Z","shell.execute_reply.started":"2024-06-18T08:40:42.628318Z","shell.execute_reply":"2024-06-18T08:42:45.484429Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"### XGBoost","metadata":{}},{"cell_type":"code","source":"%%time\n\nxgb_clf = XGBClassifier(device=\"cuda\", random_state=42)\nxgb_pipe = make_pipeline(StandardScaler(), xgb_clf)\n\nmodel_scorer(xgb_pipe, X, y)","metadata":{"execution":{"iopub.status.busy":"2024-06-18T08:42:45.487254Z","iopub.execute_input":"2024-06-18T08:42:45.488292Z","iopub.status.idle":"2024-06-18T08:42:55.913121Z","shell.execute_reply.started":"2024-06-18T08:42:45.488258Z","shell.execute_reply":"2024-06-18T08:42:55.91242Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"### LightGBM","metadata":{}},{"cell_type":"code","source":"%%time\n\nlgb_clf = LGBMClassifier(verbose=-1, device=\"gpu\", random_state=42)\nlgb_pipe = make_pipeline(StandardScaler(), lgb_clf)\n\nmodel_scorer(lgb_pipe, X, y)","metadata":{"execution":{"iopub.status.busy":"2024-06-18T08:42:55.914566Z","iopub.execute_input":"2024-06-18T08:42:55.914949Z","iopub.status.idle":"2024-06-18T08:43:26.886491Z","shell.execute_reply.started":"2024-06-18T08:42:55.914912Z","shell.execute_reply":"2024-06-18T08:43:26.885418Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"### HistGradientBoosting","metadata":{}},{"cell_type":"code","source":"%%time\n\nhgb_clf = HistGradientBoostingClassifier(random_state=42)\nhgb_pipe = make_pipeline(StandardScaler(), hgb_clf)\n\nmodel_scorer(hgb_pipe, X, y)","metadata":{"execution":{"iopub.status.busy":"2024-06-18T08:43:26.888494Z","iopub.execute_input":"2024-06-18T08:43:26.888783Z","iopub.status.idle":"2024-06-18T08:44:02.826265Z","shell.execute_reply.started":"2024-06-18T08:43:26.888758Z","shell.execute_reply":"2024-06-18T08:44:02.825399Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"### Voting Classfier","metadata":{}},{"cell_type":"code","source":"models = [\n    (\"cat\", cat_clf),\n    (\"xgb\", xgb_clf),\n    (\"lgb\", lgb_clf),\n    (\"hgb\", hgb_clf)\n]\n\nvtg_clf = VotingClassifier(estimators=models, voting=\"soft\", n_jobs=-1)\nvtg_pipe = make_pipeline(StandardScaler(), vtg_clf)","metadata":{"execution":{"iopub.status.busy":"2024-06-18T08:44:02.829477Z","iopub.execute_input":"2024-06-18T08:44:02.829844Z","iopub.status.idle":"2024-06-18T08:44:02.835196Z","shell.execute_reply.started":"2024-06-18T08:44:02.829817Z","shell.execute_reply":"2024-06-18T08:44:02.834313Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"%%time\n\nmodel_scorer(vtg_pipe, X, y)","metadata":{"execution":{"iopub.status.busy":"2024-06-18T08:44:02.836469Z","iopub.execute_input":"2024-06-18T08:44:02.836918Z","iopub.status.idle":"2024-06-18T08:48:35.698851Z","shell.execute_reply.started":"2024-06-18T08:44:02.836884Z","shell.execute_reply":"2024-06-18T08:48:35.697817Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# Model Analysis","metadata":{}},{"cell_type":"code","source":"x_train, x_test = train_test_split(train, test_size=0.1, shuffle=True, random_state=42, stratify=train.Target)\ny_train = x_train.pop(target)\ny_test = x_test.pop(target)\n\nvtg_pipe.fit(x_train, y_train)\ny_pred = vtg_pipe.predict(x_test)\n\nprint(classification_report(lab_enc.inverse_transform(y_test),\n                            lab_enc.inverse_transform(y_pred)))","metadata":{"execution":{"iopub.status.busy":"2024-06-11T10:51:04.171501Z","iopub.execute_input":"2024-06-11T10:51:04.171892Z","iopub.status.idle":"2024-06-11T10:51:49.922531Z","shell.execute_reply.started":"2024-06-11T10:51:04.171858Z","shell.execute_reply":"2024-06-11T10:51:49.921591Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"confusion_mat = confusion_matrix(y_test, y_pred)\n\nConfusionMatrixDisplay(confusion_mat, display_labels=lab_enc.classes_.tolist()).plot()\nplt.title(\"Confusion Matrix\")\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-06-11T10:53:56.340974Z","iopub.execute_input":"2024-06-11T10:53:56.341775Z","iopub.status.idle":"2024-06-11T10:53:56.623791Z","shell.execute_reply.started":"2024-06-11T10:53:56.341737Z","shell.execute_reply":"2024-06-11T10:53:56.622911Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# üîÆ Prediction","metadata":{}},{"cell_type":"code","source":"vtg_pipe.fit(X, y)","metadata":{"execution":{"iopub.status.busy":"2024-06-18T08:50:30.012695Z","iopub.execute_input":"2024-06-18T08:50:30.013069Z","iopub.status.idle":"2024-06-18T08:50:56.005194Z","shell.execute_reply.started":"2024-06-18T08:50:30.013041Z","shell.execute_reply":"2024-06-18T08:50:56.004067Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"test_pred = vtg_pipe.predict(test)","metadata":{"execution":{"iopub.status.busy":"2024-06-18T09:33:37.934884Z","iopub.execute_input":"2024-06-18T09:33:37.935286Z","iopub.status.idle":"2024-06-18T09:33:39.030755Z","shell.execute_reply.started":"2024-06-18T09:33:37.935259Z","shell.execute_reply":"2024-06-18T09:33:39.029777Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"sub = pd.read_csv(\"/kaggle/input/playground-series-s4e6/sample_submission.csv\")\nsub[target] = lab_enc.inverse_transform(test_pred)","metadata":{"execution":{"iopub.status.busy":"2024-06-18T09:33:42.054125Z","iopub.execute_input":"2024-06-18T09:33:42.054501Z","iopub.status.idle":"2024-06-18T09:33:42.098343Z","shell.execute_reply.started":"2024-06-18T09:33:42.05447Z","shell.execute_reply":"2024-06-18T09:33:42.097561Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"sub","metadata":{"execution":{"iopub.status.busy":"2024-06-18T09:33:46.194012Z","iopub.execute_input":"2024-06-18T09:33:46.194823Z","iopub.status.idle":"2024-06-18T09:33:46.205103Z","shell.execute_reply.started":"2024-06-18T09:33:46.194791Z","shell.execute_reply":"2024-06-18T09:33:46.204121Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# Using Public Notebooks\n<div class=\"alert alert-block alert-success\" style=\"font-size:20px; font-family:verdana; line-height:1.7;\">\nIn this section, I have used some public notebooks with very high public scores to improve the overall score of my submission.</br>\n\nThe following notebooks are used to improve the score:\n    <ol style=\"font-size:20px; font-family:verdana; line-height:1.7\">\n        <li><a href=\"https://www.kaggle.com/code/ravaghi/s04e06-academic-success-voting\">https://www.kaggle.com/code/ravaghi/s04e06-academic-success-voting</a></li>\n        <li><a href=\"https://www.kaggle.com/code/mehrankazeminia/3-ensembling-academic-success-ps4e6\">https://www.kaggle.com/code/mehrankazeminia/3-ensembling-academic-success-ps4e6</a></li>\n        <li><a href=\"https://www.kaggle.com/code/rockiecao/pss4e6-gbm-classifier-ensemble\">https://www.kaggle.com/code/rockiecao/pss4e6-gbm-classifier-ensemble</a></li>\n        <li><a href=\"https://www.kaggle.com/code/arunklenin/ps4e6-academic-success-classification-ensemble\">https://www.kaggle.com/code/arunklenin/ps4e6-academic-success-classification-ensemble</a></li>\n        <li><a href=\"https://www.kaggle.com/code/curiouscyborgs/karan-s-notebook-classification-th-academic-data\">https://www.kaggle.com/code/curiouscyborgs/karan-s-notebook-classification-th-academic-data</a></li>\n    </ol>\n</div>","metadata":{}},{"cell_type":"code","source":"ext1 = pd.read_csv(\"/kaggle/input/s04e06-academic-success-voting/voting_acc-0.834000_auc-0.929988.csv\").Target\next2 = pd.read_csv(\"/kaggle/input/karan-s-notebook-classification-th-academic-data/submission.csv\").Target\next3 = pd.read_csv(\"/kaggle/input/ps4e6-academic-success-classification-ensemble/submission_mode.csv\").Target\next4 = pd.read_csv(\"/kaggle/input/3-ensembling-academic-success-ps4e6/submission.csv\").Target\next5 = pd.read_csv(\"/kaggle/input/pss4e6-gbm-classifier-ensemble/submission.csv\").Target\n\nsubs = [sub.Target, ext1, ext2, ext3, ext4, ext5]","metadata":{"execution":{"iopub.status.busy":"2024-06-18T09:33:50.696478Z","iopub.execute_input":"2024-06-18T09:33:50.697101Z","iopub.status.idle":"2024-06-18T09:33:50.783863Z","shell.execute_reply.started":"2024-06-18T09:33:50.697073Z","shell.execute_reply":"2024-06-18T09:33:50.782854Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"from scipy import stats\n\nsub[target] = lab_enc.inverse_transform(stats.mode([lab_enc.transform(ext) for ext in subs])[0]).tolist()","metadata":{"execution":{"iopub.status.busy":"2024-06-18T09:33:54.099922Z","iopub.execute_input":"2024-06-18T09:33:54.100687Z","iopub.status.idle":"2024-06-18T09:33:56.844394Z","shell.execute_reply.started":"2024-06-18T09:33:54.100655Z","shell.execute_reply":"2024-06-18T09:33:56.843424Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"sub","metadata":{"execution":{"iopub.status.busy":"2024-06-18T09:34:01.973926Z","iopub.execute_input":"2024-06-18T09:34:01.974551Z","iopub.status.idle":"2024-06-18T09:34:01.984359Z","shell.execute_reply.started":"2024-06-18T09:34:01.974516Z","shell.execute_reply":"2024-06-18T09:34:01.983332Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"code","source":"sub.to_csv(\"submission.csv\", index=False)","metadata":{"execution":{"iopub.status.busy":"2024-06-18T09:34:08.969103Z","iopub.execute_input":"2024-06-18T09:34:08.969483Z","iopub.status.idle":"2024-06-18T09:34:09.046551Z","shell.execute_reply.started":"2024-06-18T09:34:08.969451Z","shell.execute_reply":"2024-06-18T09:34:09.045793Z"},"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"<p><center style=\"color:#159364; font-family:cursive; font-size:20px; font-weight:600\">Thanks for visiting my notebook. If you enjoyed The Notebook, I kindly request that you consider upvoting to provide me with further motivation to create additional works of similar nature in the future. </center></p>\n\n<center><img src=\"https://i.giphy.com/media/v1.Y2lkPTc5MGI3NjExaTVnem5oNHNzeGxsb2F6bXpicHl0MmszeWUyNmlwa3FjOWg5bmVkciZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/fzftvvUExTke50rIjy/giphy.gif\"></center>","metadata":{}}]}